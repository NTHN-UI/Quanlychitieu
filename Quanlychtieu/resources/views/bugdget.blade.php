<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu·∫£n L√Ω Ng√¢n S√°ch</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(135deg, #f9fafc, #e8ecf3);
            margin: 0;
        }

        nav {
            background: linear-gradient(135deg, #4e54c8, #8f94fb);
            color: white;
            width: 220px;
            height: 100vh;
            box-shadow: 4px 0 6px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            left: 0;
            padding: 20px;
            z-index: 10;
        }

        nav .nav-link {
            color: white;
            margin-bottom: 15px;
            font-weight: 500;
            padding: 12px 16px;
            border-radius: 8px;
            transition: background 0.3s, transform 0.3s;
        }

        nav .nav-link:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateX(10px);
        }

        nav .nav-link.active {
            background: rgba(255, 255, 255, 0.4);
            font-weight: bold;
        }

        .main-content {
                margin-left: 240px;
                /* Space for fixed sidebar */
                padding: 20px;
                overflow-y: auto;
                height: 100vh;
                background: linear-gradient(135deg, #ffffff, #f2f6fc);
                /* M√†u n·ªÅn s√°ng tinh t·∫ø */
            }

            .container {
                background: white;
                padding: 25px;
                border-radius: 12px;
                box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
                max-width: 900px;
                margin: auto;
            }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .btn-primary {
            background: linear-gradient(135deg, #4e54c8, #8f94fb);
            border: none;
            font-weight: bold;
        }

        .section-title {
            font-size: 1.5rem;
            color: #4e54c8;
            margin-bottom: 1rem;
        }

        .progress {
            height: 20px;
            border-radius: 10px;
        }
    </style>
</head>

<body>
    <!-- Sidebar Navigation -->
    <nav>
            <ul class="nav flex-column">
                <li class="nav-item"><a href="dashboard.blade.php" class="nav-link">Dashboard</a></li>
                <li class="nav-item"><a href="expense.blade.php" class="nav-link">Chi ti√™u</a></li>
                <li class="nav-item"><a href="transaction.blade.php" class="nav-link">S·ªï giao d·ªãch</a></li>
                <li class="nav-item"><a href="remind.blade.php" class="nav-link">Nh·∫Øc nh·ªü</a></li>
                <li class="nav-item"><a href="bugdget.blade.php" class="nav-link active">Ng√¢n s√°ch</a></li>
                <li class="nav-item"><a href="setting.blade.php" class="nav-link">C√†i ƒë·∫∑t</a></li>
            </ul>
        </nav>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Budget Section -->
         <div class="container">
         <section id="budget-section">
            <h2 class="section-title">Qu·∫£n L√Ω Ng√¢n S√°ch</h2>
            <div class="card mb-4">
                <div class="card-body">
                    <form id="budget-form">
                        <div class="mb-3">
                            <label for="budget-category" class="form-label">Danh m·ª•c</label>
                            <select class="form-select" id="budget-category" required>
                                        <option value="" selected disabled>Ch·ªçn danh m·ª•c</option>
                                        <option value="üçî|ƒÇn u·ªëng">üçî ƒÇn u·ªëng</option>
                                        <option value="üõçÔ∏è|Mua s·∫Øm">üõçÔ∏è Mua s·∫Øm</option>
                                        <option value="üéÆ|Gi·∫£i tr√≠">üéÆ Gi·∫£i tr√≠</option>
                                        <option value="üìö|H·ªçc t·∫≠p">üìö H·ªçc t·∫≠p</option>
                                        <option value="üõí|Ch·ª£, si√™u th·ªã">üõí Ch·ª£, si√™u th·ªã</option>
                                        <option value="üöó|Di chuy·ªÉn">üöó Di chuy·ªÉn</option>
                                        <option value="üíÖ|L√†m ƒë·∫πp">üíÖ L√†m ƒë·∫πp</option>
                                        <option value="‚ù§Ô∏è|S·ª©c kh·ªèe">‚ù§Ô∏è S·ª©c kh·ªèe</option>
                                        <option value="üéÅ|T·ª´ thi·ªán">üéÅ T·ª´ thi·ªán</option>
                                        <option value="üí≥|Tr·∫£ n·ª£">üí≥ Tr·∫£ n·ª£</option>
                                        <option value="üßæ|H√≥a ƒë∆°n">üßæ H√≥a ƒë∆°n</option>
                                        <option value="üè†|Nh√† c·ª≠a">üè† Nh√† c·ª≠a</option>
                                        <option value="üë®‚Äçüë©‚Äçüëß‚Äçüë¶|Ng∆∞·ªùi th√¢n">üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Ng∆∞·ªùi th√¢n</option>

                                    </select>
                        </div>
                        <div class="mb-3">
                            <label for="budget-amount" class="form-label">S·ªë ti·ªÅn</label>
                            <input type="text" class="form-control" id="budget-amount" placeholder="Nh·∫≠p s·ªë ti·ªÅn" required>
                        </div>
                        <button type="submit" class="btn btn-primary">L∆∞u Ng√¢n S√°ch</button>
                    </form>
                </div>
            </div>

            <!-- Budget Display -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">ƒê·∫∑t ng√¢n s√°ch</h5>
                    <ul id="budget-list" class="list-group">
                    </ul>
                    <div id="budget-alert" class="mt-3"></div> <!-- N∆°i hi·ªÉn th·ªã c·∫£nh b√°o -->
                </div>
            </div>
        </section>

        <!-- Forecast Section -->
        <section id="forecast-section" class="mt-5">
            <h2 class="section-title">D·ª± B√°o Chi Ti√™u</h2>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">D·ª± B√°o H√†ng Th√°ng</h5>
                    <ul id="forecast-list" class="list-group">
                    </ul>
                </div>
            </div>
        </section>

        <!-- Goals Section -->
        <section id="goal-section" class="mt-5">
            <h2 class="section-title">M·ª•c Ti√™u T√†i Ch√≠nh</h2>
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Thi·∫øt L·∫≠p M·ª•c Ti√™u</h5>
                    <form id="goal-form">
                        <div class="mb-3">
                            <label for="goal-name" class="form-label">T√™n M·ª•c Ti√™u</label>
                            <input type="text" class="form-control" id="goal-name" placeholder="V√≠ d·ª•: Mua nh√†" required>
                        </div>
                        <div class="mb-3">
                            <label for="goal-amount" class="form-label">S·ªë Ti·ªÅn (VND)</label>
                            <input type="number" class="form-control" id="goal-amount" placeholder="Nh·∫≠p s·ªë ti·ªÅn" required>
                        </div>
                        <button type="submit" class="btn btn-primary">L∆∞u M·ª•c Ti√™u</button>
                    </form>
                </div>
            </div>

            <!-- Goals Display -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Danh S√°ch M·ª•c Ti√™u</h5>
                    <ul id="goal-list" class="list-group">
                    </ul>
                </div>
            </div>
        </section>
         </div>
    
    </div>

    <script>
        
        const budgetForm = document.getElementById('budget-form');
const budgetList = document.getElementById('budget-list');
const budgetAlert = document.getElementById('budget-alert');

// Danh s√°ch c√°c icon t∆∞∆°ng ·ª©ng v·ªõi c√°c danh m·ª•c
const categoryIcons = {
    "üçî|ƒÇn u·ªëng": "üçî",
    "üõçÔ∏è|Mua s·∫Øm": "üõçÔ∏è",
    "üéÆ|Gi·∫£i tr√≠": "üéÆ",
    "üìö|H·ªçc t·∫≠p": "üìö",
    "üõí|Ch·ª£, si√™u th·ªã": "üõí",
    "üöó|Di chuy·ªÉn": "üöó",
    "üíÖ|L√†m ƒë·∫πp": "üíÖ",
    "‚ù§Ô∏è|S·ª©c kh·ªèe": "‚ù§Ô∏è",
    "üéÅ|T·ª´ thi·ªán": "üéÅ",
    "üí≥|Tr·∫£ n·ª£": "üí≥",
    "üßæ|H√≥a ƒë∆°n": "üßæ",
    "üè†|Nh√† c·ª≠a": "üè†",
    "üë®‚Äçüë©‚Äçüëß‚Äçüë¶|Ng∆∞·ªùi th√¢n": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
};
// H√†m ƒë·ªãnh d·∫°ng s·ªë ti·ªÅn v·ªõi d·∫•u ph·∫©y khi ng∆∞·ªùi d√πng nh·∫≠p
const formatCurrencyInput = (input) => {
    input.addEventListener('input', (e) => {
        let value = e.target.value.replace(/,/g, ''); // Lo·∫°i b·ªè d·∫•u ph·∫©y tr∆∞·ªõc
        if (!isNaN(value)) {
            // ƒê·ªãnh d·∫°ng l·∫°i s·ªë v·ªõi d·∫•u ph·∫©y
            e.target.value = value.replace(/\B(?=(\d{3})+(?!\d))/g, ','); // Th√™m d·∫•u ph·∫©y
        }
    });
};

// √Åp d·ª•ng h√†m tr√™n cho tr∆∞·ªùng nh·∫≠p s·ªë ti·ªÅn
const budgetAmountInput = document.getElementById('budget-amount');
formatCurrencyInput(budgetAmountInput);


const saveBudgetToLocalStorage = (category, formattedAmount) => {
    const budgets = JSON.parse(localStorage.getItem('budgets')) || {};

    // T√°ch ph·∫ßn t√™n danh m·ª•c (b·ªè icon)
    const categoryName = category.includes('|') ? category.split('|')[1] : category;

    budgets[categoryName] = formattedAmount; // L∆∞u ch·ªâ t√™n danh m·ª•c v√† s·ªë ti·ªÅn
    localStorage.setItem('budgets', JSON.stringify(budgets));
};


const formatCurrency = (amount) => {
    return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');  // Th√™m d·∫•u ph·∫©y ·ªü m·ªói ba ch·ªØ s·ªë
};
// H√†m l·∫•y ng√¢n s√°ch v√† t√≠nh to√°n c·∫£nh b√°o
const checkBudgetAndDisplayAlert = () => {
    const budgets = JSON.parse(localStorage.getItem('budgets')) || {}; // L·∫•y ng√¢n s√°ch t·ª´ localStorage
    const categoryExpenses = JSON.parse(localStorage.getItem('categoryExpenses')) || {}; // L·∫•y chi ti√™u t·ª´ localStorage
    const budgetAlert = document.getElementById('budget-alert'); // V·ªã tr√≠ hi·ªÉn th·ªã c·∫£nh b√°o

    let alertMessage = '';

    // L·∫∑p qua c√°c danh m·ª•c chi ti√™u trong categoryExpenses
    for (const [category, expenseAmount] of Object.entries(categoryExpenses)) {
        const expenseValue = parseFloat(expenseAmount.replace(/,/g, '')) || 0; // T·ªïng chi ti√™u th·ª±c t·∫ø
        const budgetAmount = parseFloat((budgets[category] || '0').replace(/,/g, '')) || 0; // Ng√¢n s√°ch ƒë√£ ƒë·∫∑t (ho·∫∑c 0 n·∫øu kh√¥ng c√≥)

        if (budgetAmount > 0 && expenseValue > budgetAmount) {
            // N·∫øu v∆∞·ª£t ng√¢n s√°ch, t·∫°o th√¥ng b√°o
            const categoryName = category.includes('|') ? category.split('|')[1] : category; // L·∫•y t√™n danh m·ª•c
            const icon = categoryIcons[category] || ''; // L·∫•y icon c·ªßa danh m·ª•c
            alertMessage += `
                <p>${icon} <strong>${categoryName}</strong> v∆∞·ª£t ng√¢n s√°ch! 
                Chi ti√™u: <strong>${expenseAmount}</strong> VND, 
                Ng√¢n s√°ch: <strong>${formatCurrency(budgetAmount)}</strong> VND.</p>`;
        }
    }

    // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu c√≥
    if (alertMessage) {
        budgetAlert.innerHTML = `
            <div class="alert alert-danger">
                ${alertMessage}
            </div>`;
    } else {
        budgetAlert.innerHTML = ''; // X√≥a th√¥ng b√°o n·∫øu kh√¥ng v∆∞·ª£t ng√¢n s√°ch
    }
};






const loadBudgetsFromLocalStorage = () => {
    const budgets = JSON.parse(localStorage.getItem('budgets')) || {};
    budgetList.innerHTML = ''; // X√≥a danh s√°ch c≈©

    for (const [category, amount] of Object.entries(budgets)) {
        const li = document.createElement('li');
        li.className = 'list-group-item d-flex justify-content-between align-items-center';

        // Hi·ªÉn th·ªã t√™n danh m·ª•c v√† s·ªë ti·ªÅn + "VND" g·ªçn g√†ng
        li.innerHTML = `
            <span>${category}</span>
            <span style="white-space: nowrap;">${formatCurrency(amount)} VND</span>
        `;
        budgetList.appendChild(li);
    }

    checkBudgetAndDisplayAlert(); // Ki·ªÉm tra ng√¢n s√°ch
};


// G·ªçi ki·ªÉm tra ng√¢n s√°ch khi t·∫£i trang
document.addEventListener('DOMContentLoaded', () => {
    loadBudgetsFromLocalStorage();
});
// X·ª≠ l√Ω khi l∆∞u ng√¢n s√°ch
budgetForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const category = document.getElementById('budget-category').value;
    const amount = document.getElementById('budget-amount').value; // D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh d·∫°ng
    saveBudgetToLocalStorage(category, amount);
    loadBudgetsFromLocalStorage();
    budgetForm.reset();
});



// Load ng√¢n s√°ch khi t·∫£i trang
loadBudgetsFromLocalStorage();



// Forecast Spending
const forecastList = document.getElementById('forecast-list');

const loadForecastFromLocalStorage = () => {
    const transactions = JSON.parse(localStorage.getItem('transactions')) || [];
    const forecast = {};

    transactions.forEach(tx => {
        if (tx.type === 'expense' && tx.amount) {
            const amount = parseFloat(String(tx.amount).replace(/,/g, '')) || 0; // ƒê·∫£m b·∫£o tx.amount l√† chu·ªói
            forecast[tx.category] = (forecast[tx.category] || 0) + amount;
        }
    });

    forecastList.innerHTML = '';
    for (const [category, total] of Object.entries(forecast)) {
        const average = (total / 12).toFixed(2).toLocaleString('en-US');
        const li = document.createElement('li');
        li.className = 'list-group-item';
        li.textContent = `${category.split('|')[1]}: Trung b√¨nh ${average} VND/th√°ng`;
        forecastList.appendChild(li);
    }
};

loadForecastFromLocalStorage();

// Goals Management
const goalForm = document.getElementById('goal-form');
const goalList = document.getElementById('goal-list');

const saveGoalToLocalStorage = (name, formattedAmount) => {
    const goals = JSON.parse(localStorage.getItem('goals')) || [];
    goals.push({ name, amount: formattedAmount }); // L∆∞u d·ªØ li·ªáu ƒë√£ ƒë·ªãnh d·∫°ng
    localStorage.setItem('goals', JSON.stringify(goals));
};

const loadGoalsFromLocalStorage = () => {
    const goals = JSON.parse(localStorage.getItem('goals')) || [];
    goalList.innerHTML = '';
    goals.forEach(goal => {
        const li = document.createElement('li');
        li.className = 'list-group-item';
        li.textContent = `${goal.name}: ${goal.amount} VND`;
        goalList.appendChild(li);
    });
};

goalForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const name = document.getElementById('goal-name').value;
    const amount = document.getElementById('goal-amount').value; // D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh d·∫°ng
    saveGoalToLocalStorage(name, amount);
    loadGoalsFromLocalStorage();
    goalForm.reset();
});

// ƒê·ªãnh d·∫°ng tr∆∞·ªùng nh·∫≠p s·ªë ti·ªÅn cho m·ª•c ti√™u
const goalAmountInput = document.getElementById('goal-amount');
formatCurrencyInput(goalAmountInput);

// Load m·ª•c ti√™u khi t·∫£i trang
loadGoalsFromLocalStorage();

document.addEventListener('DOMContentLoaded', () => {
    loadBudgetsFromLocalStorage(); // Hi·ªÉn th·ªã ng√¢n s√°ch
    checkBudgetAndDisplayAlert(); // Ki·ªÉm tra v√† hi·ªÉn th·ªã c·∫£nh b√°o
});



budgetForm.addEventListener('submit', (e) => {
    e.preventDefault();

    const category = document.getElementById('budget-category').value; // L·∫•y danh m·ª•c ƒë·∫ßy ƒë·ªß (c√≥ icon)
    const amount = document.getElementById('budget-amount').value;

    saveBudgetToLocalStorage(category, amount); // G·ªçi h√†m l∆∞u ng√¢n s√°ch (t·ª± t√°ch icon)
    loadBudgetsFromLocalStorage(); // T·∫£i l·∫°i danh s√°ch ng√¢n s√°ch
    budgetForm.reset(); // Reset form
});



    </script>
</body>

</html>
